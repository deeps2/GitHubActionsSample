name: CI

on:
  push:
    branches:
      - branch_g

jobs:
  verify_all_jvm_unit_tests:
    name: Verify All JVM Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo under GitHub's workspace
        uses: actions/checkout@v2

#      - name: Build with Gradle
#        run: ./gradlew build

      - name: Make gradlew executable
        run: chmod +x gradlew
#        run: chmod +x checksum.sh

#      - name: Gradle Wrapper Validation
#        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      #- name: Grant Permission
      #  run: git update-index --chmod=+x gradlew

      - name: Generate cache key
        run: sudo ./checksum.sh checksum.txt

      - name: Copy CI ka gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Cache Gradle
        uses: actions/cache@v2
#        continue-on-error: true # continue if the cache restore/upload fails
        with:
          path: ~/.gradle/caches
#          path: |
#            ~/.gradle/caches/modules-*
#            ~/.gradle/caches/jars-*
#            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Unit tests
        run: ./gradlew test --stacktrace

      - name: Build Debug APK
#        run: bash ./gradlew :app:assembleDebug
        run: ./gradlew :app:assembleDebug test check --stacktrace

      - name: Copy generated APK to its output folder
        uses: actions/upload-artifact@v2
        with:
          name: app-debug.apk
          path: ${{ github.workspace }}/app/build/outputs/apk/debug/app-debug.apk
      
